{"ast":null,"code":"var _jsxFileName = \"/root/UNIVERSITA/Webapp-comune-di-Trento/app-react/src/InterfacciaC.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/InterfacciaDA.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InterfacciaC = () => {\n  _s();\n  const navigate = useNavigate();\n  const [segnalazioni, setSegnalazioni] = useState([]);\n  const [prenotazioni, setPrenotazioni] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [sortOrderSegnalazioni, setSortOrderSegnalazioni] = useState('desc');\n  const [filterTextSegnalazioni, setFilterTextSegnalazioni] = useState('');\n  const [sortOrderPrenotazioni, setSortOrderPrenotazioni] = useState('desc');\n  const [filterTextPrenotazioni, setFilterTextPrenotazioni] = useState('');\n  const fetchUser = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"Utente non loggato.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/me\", {\n        method: \"GET\",\n        headers: {\n          \"access-token\": token,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log('Token inviato:', localStorage.getItem('token'));\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        const errorData = await response.json();\n        alert(errorData.error || \"Errore nel recupero dei dati dell'utente.\");\n      }\n    } catch (error) {\n      console.error(\"Errore durante la richiesta:\", error);\n      alert(\"Errore nella comunicazione con il server.\");\n    }\n  };\n  useEffect(() => {\n    fetchUser();\n    const token = localStorage.getItem(\"token\");\n    const role = localStorage.getItem(\"role\");\n    if (!token || role != \"operatore_comune\") {\n      navigate(\"/login\");\n    }\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const resSegnalazioni = await fetch('http://localhost:5000/api/operatore_com/segnalazioni', {\n          method: \"GET\",\n          headers: {\n            \"access-token\": token,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const resPrenotazioni = await fetch('http://localhost:5000/api/operatore_com/prenotazioni', {\n          method: \"GET\",\n          headers: {\n            \"access-token\": token,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const segnalazioniData = await resSegnalazioni.json();\n        const prenotazioniData = await resPrenotazioni.json();\n        setSegnalazioni(segnalazioniData);\n        setPrenotazioni(prenotazioniData);\n      } catch (error) {\n        console.error('Errore nel recupero dati:', error);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const sortReports = (order, reports) => {\n    if (!Array.isArray(reports)) {\n      // Controllo per evitare errori\n      console.error(\"sortReports: reports is not an array\", reports);\n      return;\n    }\n    return [...reports].sort((a, b) => {\n      const dateA = new Date(a.data || a.dataPrenotazione);\n      const dateB = new Date(b.data || b.dataPrenotazione);\n      return order === 'asc' ? dateA - dateB : dateB - dateA;\n    });\n  };\n  const sortedSegnalazioni = sortReports(sortOrderSegnalazioni, segnalazioni);\n  const sortedPrenotazioni = sortReports(sortOrderPrenotazioni, prenotazioni);\n  const filteredSegnalazioni = sortedSegnalazioni.filter(report => report.descrizione.toLowerCase().includes(filterTextSegnalazioni.toLowerCase()));\n  const filteredPrenotazioni = sortedPrenotazioni.filter(prenotazione => prenotazione.tipoSacchetto.toLowerCase().includes(filterTextPrenotazioni.toLowerCase()) || prenotazione.puntoRitiro.toLowerCase().includes(filterTextPrenotazioni.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fade-in\",\n      children: \"Trento Clean City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"fade-in\",\n        children: \"Interfaccia operatore Comunale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Caricamento dati...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Segnalazioni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [\"Ordina per:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"sort-dropdown\",\n            value: sortOrderSegnalazioni,\n            onChange: e => setSortOrderSegnalazioni(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"desc\",\n              children: \"Meno recente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"asc\",\n              children: \"Pi\\xF9 recente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter-input\",\n            placeholder: \"Filtra segnalazioni\",\n            value: filterTextSegnalazioni,\n            onChange: e => setFilterTextSegnalazioni(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-list\",\n          children: filteredSegnalazioni.map(report => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-card\",\n            children: [report.foto && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: report.foto,\n              alt: \"Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Data: \", report.data]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Motivo: \", report.descrizione]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `status ${report.stato.toLowerCase()}`,\n              children: report.stato\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Visualizza foto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, report.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prenotazioni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [\"Ordina per:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"sort-dropdown\",\n            value: sortOrderPrenotazioni,\n            onChange: e => setSortOrderPrenotazioni(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"desc\",\n              children: \"Meno recente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"asc\",\n              children: \"Pi\\xF9 recente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"filter-input\",\n            placeholder: \"Filtra prenotazioni\",\n            value: filterTextPrenotazioni,\n            onChange: e => setFilterTextPrenotazioni(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-list\",\n          children: filteredPrenotazioni.map(prenotazione => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Data: \", new Date(prenotazione.dataPrenotazione).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"NumeroSacchetti: \", prenotazione.quantita]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Tipo: \", prenotazione.tipoSacchetto]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Punto di Ritiro: \", prenotazione.puntoRitiro]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `status ${prenotazione.stato.toLowerCase()}`,\n              children: prenotazione.stato\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Visualizza dettagli\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, prenotazione.prenotazioneId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(InterfacciaC, \"JLCJ0SOHjDsCib8Czatz8N6EXiM=\", false, function () {\n  return [useNavigate];\n});\n_c = InterfacciaC;\nexport default InterfacciaC;\nvar _c;\n$RefreshReg$(_c, \"InterfacciaC\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","InterfacciaC","_s","navigate","segnalazioni","setSegnalazioni","prenotazioni","setPrenotazioni","loading","setLoading","user","setUser","sortOrderSegnalazioni","setSortOrderSegnalazioni","filterTextSegnalazioni","setFilterTextSegnalazioni","sortOrderPrenotazioni","setSortOrderPrenotazioni","filterTextPrenotazioni","setFilterTextPrenotazioni","fetchUser","token","localStorage","getItem","alert","response","fetch","method","headers","console","log","ok","userData","json","errorData","error","role","fetchData","resSegnalazioni","resPrenotazioni","segnalazioniData","prenotazioniData","sortReports","order","reports","Array","isArray","sort","a","b","dateA","Date","data","dataPrenotazione","dateB","sortedSegnalazioni","sortedPrenotazioni","filteredSegnalazioni","filter","report","descrizione","toLowerCase","includes","filteredPrenotazioni","prenotazione","tipoSacchetto","puntoRitiro","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","map","foto","src","alt","stato","id","toLocaleDateString","quantita","prenotazioneId","_c","$RefreshReg$"],"sources":["/root/UNIVERSITA/Webapp-comune-di-Trento/app-react/src/InterfacciaC.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/InterfacciaDA.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst InterfacciaC = () => {\r\n    const navigate = useNavigate();\r\n    const [segnalazioni, setSegnalazioni] = useState([]);\r\n    const [prenotazioni, setPrenotazioni] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [user, setUser] = useState(null);\r\n    \r\n    const [sortOrderSegnalazioni, setSortOrderSegnalazioni] = useState('desc');\r\n    const [filterTextSegnalazioni, setFilterTextSegnalazioni] = useState('');\r\n    \r\n    const [sortOrderPrenotazioni, setSortOrderPrenotazioni] = useState('desc');\r\n    const [filterTextPrenotazioni, setFilterTextPrenotazioni] = useState('');\r\n    const fetchUser = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          alert(\"Utente non loggato.\");\r\n          return;\r\n        }\r\n    \r\n        try {\r\n          const response = await fetch(\"http://localhost:5000/api/auth/me\", {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"access-token\": token,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          console.log('Token inviato:', localStorage.getItem('token'));\r\n          if (response.ok) {\r\n            const userData = await response.json();\r\n            setUser(userData);\r\n          } else {\r\n            const errorData = await response.json();\r\n            alert(errorData.error || \"Errore nel recupero dei dati dell'utente.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Errore durante la richiesta:\", error);\r\n          alert(\"Errore nella comunicazione con il server.\");\r\n        }\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n        const token = localStorage.getItem(\"token\");\r\n        const role = localStorage.getItem(\"role\");\r\n        if(!token || role != \"operatore_comune\"){\r\n            navigate(\"/login\");\r\n        }\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resSegnalazioni = await fetch('http://localhost:5000/api/operatore_com/segnalazioni', {\r\n                    method: \"GET\",\r\n                    headers:{\r\n                        \"access-token\": token,\r\n                        \"Content-Type\": \"application/json\",\r\n                    }\r\n                });\r\n                const resPrenotazioni = await fetch('http://localhost:5000/api/operatore_com/prenotazioni', {\r\n                    method: \"GET\",\r\n                    headers:{\r\n                        \"access-token\": token,\r\n                        \"Content-Type\": \"application/json\",\r\n                    }\r\n            });\r\n\r\n                const segnalazioniData = await resSegnalazioni.json();\r\n                const prenotazioniData = await resPrenotazioni.json();\r\n\r\n                setSegnalazioni(segnalazioniData);\r\n                setPrenotazioni(prenotazioniData);\r\n            } catch (error) {\r\n                console.error('Errore nel recupero dati:', error);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    const sortReports = (order, reports) => {\r\n        if (!Array.isArray(reports)) {  // Controllo per evitare errori\r\n            console.error(\"sortReports: reports is not an array\", reports);\r\n            return;\r\n        }\r\n        return [...reports].sort((a, b) => {\r\n            const dateA = new Date(a.data || a.dataPrenotazione); \r\n            const dateB = new Date(b.data || b.dataPrenotazione); \r\n            return order === 'asc' ? dateA - dateB : dateB - dateA;\r\n        });\r\n    };\r\n\r\n    const sortedSegnalazioni = sortReports(sortOrderSegnalazioni, segnalazioni);\r\n    const sortedPrenotazioni = sortReports(sortOrderPrenotazioni, prenotazioni);\r\n\r\n    const filteredSegnalazioni = sortedSegnalazioni.filter(report =>\r\n        report.descrizione.toLowerCase().includes(filterTextSegnalazioni.toLowerCase())\r\n    );\r\n    const filteredPrenotazioni = sortedPrenotazioni.filter(prenotazione =>\r\n        prenotazione.tipoSacchetto.toLowerCase().includes(filterTextPrenotazioni.toLowerCase()) ||\r\n        prenotazione.puntoRitiro.toLowerCase().includes(filterTextPrenotazioni.toLowerCase())\r\n    );\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"fade-in\">Trento Clean City</h1>\r\n            <main>\r\n                <h2 className=\"fade-in\">Interfaccia operatore Comunale</h2>\r\n                {loading ? <p>Caricamento dati...</p> : (\r\n                    <>\r\n                <h3>Segnalazioni</h3>\r\n                <div className=\"controls\">\r\n                    Ordina per:\r\n                    <select className=\"sort-dropdown\" value={sortOrderSegnalazioni} onChange={(e) => setSortOrderSegnalazioni(e.target.value)}>\r\n                        <option value=\"desc\">Meno recente</option>\r\n                        <option value=\"asc\">Più recente</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"filter-input\"\r\n                        placeholder=\"Filtra segnalazioni\"\r\n                        value={filterTextSegnalazioni}\r\n                        onChange={(e) => setFilterTextSegnalazioni(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"report-list\">\r\n                    {filteredSegnalazioni.map(report => (\r\n                        <div key={report.id} className=\"report-card\">\r\n                            {report.foto && <img src={report.foto} alt=\"Report\" />}\r\n                            <p>Data: {report.data}</p>\r\n                            <p>Motivo: {report.descrizione}</p>\r\n                            <p className={`status ${report.stato.toLowerCase()}`}>{report.stato}</p>\r\n                            <button>Visualizza foto</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <h3>Prenotazioni</h3>\r\n                <div className=\"controls\">\r\n                    Ordina per:\r\n                    <select className=\"sort-dropdown\" value={sortOrderPrenotazioni} onChange={(e) => setSortOrderPrenotazioni(e.target.value)}>\r\n                        <option value=\"desc\">Meno recente</option>\r\n                        <option value=\"asc\">Più recente</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"filter-input\"\r\n                        placeholder=\"Filtra prenotazioni\"\r\n                        value={filterTextPrenotazioni}\r\n                        onChange={(e) => setFilterTextPrenotazioni(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"report-list\">\r\n                    {filteredPrenotazioni.map(prenotazione => (\r\n                        <div key={prenotazione.prenotazioneId} className=\"report-card\">\r\n                            <p>Data: {new Date(prenotazione.dataPrenotazione).toLocaleDateString()}</p>\r\n                            <p>NumeroSacchetti: {prenotazione.quantita}</p>\r\n                            <p>Tipo: {prenotazione.tipoSacchetto}</p>\r\n                            <p>Punto di Ritiro: {prenotazione.puntoRitiro}</p>\r\n                            <p className={`status ${prenotazione.stato.toLowerCase()}`}>{prenotazione.stato}</p>\r\n                            <button>Visualizza dettagli</button> \r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                </>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InterfacciaC;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}