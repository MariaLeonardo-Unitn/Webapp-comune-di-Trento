openapi: '3.0.0'
info:
  version: '1.0'
  title: "Trento Clean City OpeanAPI 3.0"
  description: API per gestire l'ambiente pubblico di Trento
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PuntoInteresse:
      type: object
      properties:
        PuntoId:
          type: string
          description: ID del punto significativo
        tipo:
          type: string
          enum: [centro_ecologico, bidone_pubblico]
          description: Tipo di punto significativo
        nome:
          type: string
          description: Nome o descrizione del punto di interesse
        posizione:
          type: object
          properties:
            latitudine:
              type: number
              format: float
              description: Latitudine del punto
            longitudine:
              type: number
              format: float
              description: Longitudine del punto
      required:
        - puntoId
        - tipo
        - nome
        - posizione
    Segnalazioni:
      type: object
      required:
      - segnalazioneId
      - utenteId
      - luogo
      - data
      - descrizione
      - stato
      - foto
      - posizione
      properties:
        segnalazioneId:
          type: string
          description: 'Identificatore della segnalazione'
        utenteId:
          type: string
          description: 'Link allo user'
        luogo:
          type: string
          description: 'Luogo della segnalazione'
        data:
          type: string
          format: date-time
          description: 'Data della segnalazione'
        descrizione:
          type: string
          description: 'Descrizione del problema'
        stato:
          type: string
          enum: [attiva, presa in carico, completata]
          description: 'Stato della segnalazione'
        foto:
          type: string
          format: uri
          description: foto dell'irregolarità
        posizione:
          type: object
          properties:
            latitudine:
              type: number
              format: float
              description: latitudine del luogo della segnalazione.
            longitudine:
              type: number
              format: float
              description: longitudine del luogo della segnalazione.
    Notifiche:
      type: object
      properties:
        utenteId:
          type: string
          description: ID dell'utente a cui è stata inviata la notifica.
        message:
          type: string
          description: Descrizione del contenuto della notifica.
        segnalazioneId:
          type: string
          description: ID della segnalazione associata alla notifica, se presente.
        data:
          type: string
          format: date-time
          description: La data di creazione della notifica.
      required:
        - utenteId
        - message
        - data
paths:
  /segnalazioni:
    post:
      description: >-
        Permette agli utenti di creare una nuova segnalazione.
      summary: Crea una nuova segnalazione.
      tags:
        - Segnalazioni
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                descrizione:
                  type: string
                  description: descrizione dettagliata dell'irregolarità.
                luogo:
                  type: string
                  description: Luogo in cui si è verificata l'irregolarità.
                foto: 
                  type: string
                  format: binary
                  description: foto dell'irregolarità.
                posizione:
                  type: object
                  properties:
                    latitudine:
                      type: number
                      format: float
                      description: latitudine del luogo della segnalazione.
                    longitudine:
                      type: number
                      format: float
                      description: longitudine del luogo della segnalazione.
              required:
                - descrizione
                - luogo
                - foto
                - posizione
      responses:
        '201':
          description: 'Segnalazione creata con successo.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segnalazioni'
        '400':
          description: Richiesta non valida.
        '500':
          description: Errore del server.
  /segnalazioni/utente:
    get:
      summary: Ottiene la lista delle segnalazioni dell'utente.
      description: Mostra la lista delle segnalazioni effettuate in passato dall'utente, con il relativo stato attuale della segnalazione.
      tags:
        - Segnalazioni
      security: 
        - BearerAuth: []
      parameters:
        - in: query
          name: stato
          schema:
            type: string
            enum: [attiva, presa in carico, completata]
          description: Filtra le segnalazioni in base allo stato (facoltativo).
          required: false
      responses:
        '200':
          description: Lista delle segnalazioni dell'utente con relativo stato attuale.
          content:
            application/json:
              schema:
                type: object
                properties:
                  segnalazioni:
                    type: array
                    items:
                      $ref: '#/components/schemas/Segnalazioni'
        '401':
          description: Non autenticato.
        '500':
          description: Errore del server.
  /segnalazioni/{segnalazioneId}:
    get:
      description: >-
        Mostra la segnalazione specificata tramite ID.
      summary: Mostra segnalazione selezionata
      tags:
        - Segnalazioni
      parameters:
        - name: segnalazioneId
          in: path
          required: true
          description: ID della segnalazione da visualizzare
          schema:
            type: string
      responses:
        '200':
          description: Dettagli della segnalazione selezionata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segnalazioni'
        '404':
          description: Segnalazione non trovata.
        '500':
          description: Errore del server.
  /homepage:
    get:
      summary: Mappa della città con luoghi significativi.
      description: >-
        Homepage, mostra la mappa della città con evidenziti i punti significativi ed eventuali segnalazioni effettuate dall'utente se quest'ultimo è autenticato.
      tags:
        - Mappa
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: include_segnalazioni
          schema:
            type: boolean
            default: true
          description: Indica se includere le segnalazioni dell'utente sulla mappa (richiede autenticazione)
      responses:
        '200':
          description: Dati per la visualizzazione della mappa.
          content:
            application/json:
              schema:
                type: object
                properties:
                  punti_interesse:
                    type: array
                    items:
                      $ref: '#/components/schemas/PuntoInteresse'
                  segnalazioni:
                    type: array
                    items:
                      $ref: '#/components/schemas/Segnalazioni'
        '401': 
          description: Non autenticato
        '500':
          description: Errore del server
  /operatore_dol/segnalazioni:
    get:
      summary: Lista delle segnalazioni visibile dagli operatori di Dolomiti Ambiente.
      description: >-
        Lista delle segnalazioni visibile e modificabile dagli operatori di Dolomiti Ambiente.
      tags:
        - Interfacce operatori
      parameters:
        - in: query
          required: false
          name: stato
          schema:
            type: string
            enum: [attiva, presa in carico, completata]
          description: Filtra le segnalazioni in base allo stato.
        - in: query
          required: false
          name: ordina
          schema:
            type: string
            enum: [data_cresc, data_decresc]
          description: Ordina le segnalazioni in base alla data (più o meno recente).
      responses:
        '200':
          description: Lista delle segnalazioni
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Segnalazioni'
  /operatore_dol/segnalazioni/{segnalazioneId}:
    patch:
      summary: Aggiorna lo stato della segnalazione.
      description: >-
        Aggiorna lo stato della segnalazione selezionata.
      tags:
        - Interfacce operatori
      parameters: 
        - in: path
          name: segnalazioneId
          required: true
          schema:
            type: string
          description: ID della segnalazione da aggiornare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stato:
                  type: string
                  enum: [attiva, presa in carico, completata]
                  description: Nuovo stato della segnalazione
      responses:
        '200':
          description: Stato della segnalazione aggiornato con successo.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segnalazioni'
    delete:
      summary: Rimuove una segnalazione
      description: >-
        Rimuove una segnalazione selezionata
      tags:
        - Interfacce operatori
      parameters:
        - in: path
          name: segnalazioneId
          required: true
          schema:
            type: string
          description: ID della segnalazione da rimuovere
      responses:
        '204':
          description: Segnalazione rimossa con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segnalazioni'
  /operatore_com/segnalazioni:
    get:
      summary: Lista segnalazioni completate o prese in carico da Dolomiti Ambiente.
      description: >-
        Lista segnalazioni completate o prese in carico da Dolomiti Ambiente.
      tags:
        - Interfacce operatori
      parameters:
        - in: query
          name: stato
          schema:
            type: string
            enum: [presa in carico, completata]
          description: Filtra le segnalazioni in base allo stato.
      responses:
        '200':
          description: Lista delle segnalazioni prese in carico o completate
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Segnalazioni'
    post:
      summary: Invia notifiche agli utenti.
      description: >-
        Invia notifiche agli utenti riguardo le segnalazioni o in generale riguardanti gli ambienti pubblici.
      tags:
        - Interfacce operatori
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                utenteId:
                  type: string
                  description: ID dell'utente a cui si vuole mandare la notifica
                message:
                  type: string
                  description: descrizione della notifica.
                segnalazioneId:
                  type: string
                  description: ID della segnalazione riguardante la notifica, se necessario
      responses:
        '201':
          description: notifica inviata con successo.
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Notifiche'